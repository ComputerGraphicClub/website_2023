{"mappings":"AAAA,MAAM;IAEF,MAAM,SAAS,gBAAgB,CAAC,gBAAgB,MAAM,CAAA;IAEtD,SAAU,OAAO,WAAW,CAAA;IAC5B,QAAU,IAAG;IACb,gBAAgB,SAAS,aAAa,CAAC,UAAS;IAChD,MAAM,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,MAAK;IACzC,YAAY,EAAC;IAEb,mBAAmB,OAAO,WAAW,GAAI,AAAC,OAAO,WAAW,GAAI,CAAA,IAAI,CAAC,GAAG,GAAG,CAAA,IAAM,EAAG;IACpF,mBAAmB,OAAO,WAAW,GAAI,CAAA,IAAI,CAAC,GAAG,GAAG,CAAA,EAAG;IAGvD,aAAc;QACV,IAAI,CAAC,IAAI;QACT,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC;QACjC,SAAS,IAAI,CAAC,WAAW,CAAE,IAAI,CAAC,aAAa;IACjD;IAEA,OAAO;QACH,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;QACrC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;QAEvC,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,IAAK;YACnC,MAAM,MAAM,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,GAAG,GAAG;YACvE,IAAI,CAAC,QAAQ,CAAC,GAAG,KAAK,KAAK;QAC/B;IAEJ;IAEA,SAAS,EAAE,EAAE,EAAE,EAAE,EAAE,EAAC,EAAE,EAAE,SAAS,OAAO,EAAE;QACtC,IAAI,CAAC,GAAG,CAAC,SAAS;QAClB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,SAAS,GAAG,GAAG,KAAK,IAAI,CAAC,SAAS,GAAG;QAC/D,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,SAAS,GAAG,GAAG,KAAK,IAAI,CAAC,SAAS,GAAG;QAC/D,IAAI,CAAC,GAAG,CAAC,WAAW,GAAM;QAC1B,IAAI,CAAC,GAAG,CAAC,SAAS,GAAQ,IAAI,CAAC,SAAS;QACxC,IAAI,CAAC,GAAG,CAAC,MAAM;IACnB;AAEJ","sources":["js/CanvasGradation.js"],"sourcesContent":["class CanvasGradation {\n\n    num = document.querySelectorAll('.new-section').length\n\n    height  = window.innerHeight\n    width   = 200\n    canvasElement = document.createElement('canvas')\n    ctx = this.canvasElement.getContext('2d')\n    lineWidth = 1\n\n    graduationHeight = window.innerHeight - ((window.innerHeight / (this.num + 2)) * 2);\n    graduationMargin = window.innerHeight / (this.num + 2);\n\n\n    constructor() {\n        this.init()\n        this.canvasElement.classList.add('canvas-gradation')\n        document.body.appendChild( this.canvasElement )\n    }\n\n    init() {\n        this.canvasElement.width = this.width\n        this.canvasElement.height = this.height\n\n        for (let i = 1; i < this.num + 1; i++) {\n            const top = this.graduationMargin + this.graduationHeight / this.num * i\n            this.drawLine(0, top, 100, top)\n        }\n       \n    }\n\n    drawLine(x1, y1, x2,y2, stroke = 'black') {\n        this.ctx.beginPath()\n        this.ctx.moveTo(x1 + this.lineWidth / 2, y1 + this.lineWidth / 2)\n        this.ctx.lineTo(x2 + this.lineWidth / 2, y2 + this.lineWidth / 2)\n        this.ctx.strokeStyle    = stroke\n        this.ctx.lineWidth      = this.lineWidth\n        this.ctx.stroke()\n    }\n    \n}\n"],"names":[],"version":3,"file":"index.ac9f26f7.js.map","sourceRoot":"/__parcel_source_root/"}